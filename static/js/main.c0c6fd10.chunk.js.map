{"version":3,"sources":["store/scripts/slice.ts","components/script-list/ScriptItem.tsx","containers/scripts-table/ScriptsTable.tsx","App.tsx","store/index.ts","index.tsx"],"names":["initialState","scripts","id","uuidv4","name","code","language","date","activeId","ScriptsSlice","createSlice","reducers","editScript","state","payload","map","item","addScript","changeActiveScriptId","actions","ScriptItem","props","onSetChange","script","handleSetActive","onSetActive","setState","editId","onChangeNameInput","e","value","target","onChangeCodeInput","onChangeLanguageInput","onChangeDateInput","handleKeyDown","onChange","keyCode","renderFields","className","onKeyDown","autoFocus","length","slice","scriptItemClassName","this","onDoubleClick","React","Component","ScriptsTable","renderHeader","renderItems","key","handleSetActiveId","handleChangeItem","connect","dispatch","bindActionCreators","App","combineReducers","store","configureStore","reducer","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0c6fd10.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport type TActiveId = string | null\r\n\r\nexport interface IScriptItem {\r\n  id: string;\r\n  name: string;\r\n  code: string;\r\n  language: string;\r\n  date: string;\r\n}\r\n\r\nexport interface IScripts {\r\n  scripts: IScriptItem[];\r\n  activeId: TActiveId;\r\n}\r\n\r\nexport interface IChangePayload {\r\n  id: string;\r\n  name: string;\r\n  code: string;\r\n  language: string;\r\n  date: string;\r\n}\r\n\r\nexport interface IAddPayload {\r\n  name: string;\r\n  code: string;\r\n  language: string;\r\n  date: string;\r\n}\r\n\r\nconst initialState: IScripts = {\r\n  scripts: [\r\n    {\r\n      id: uuidv4(),\r\n      name: \"Example\",\r\n      code: \"Example code\",\r\n      language: \"PHP\",\r\n      date: \"5 июля 2020\"\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: \"什么是Lorem Ipsum?\",\r\n      code: \"也称乱数假文或者哑元文本， 是印刷及排版领域所常用的虚拟文字。由于曾经一台匿名的打印机刻意打乱了一盒印刷字体从而造出一本字体样品书，Lorem Ipsum从西元15世纪起就被作为此领域的标准文本使用。它不仅延续了五个世纪，还通过了电子排版的挑战，其雏形却依然保存至今。在1960年代，”Leatraset”公司发布了印刷着Lorem Ipsum段落的纸张，从而广泛普及了它的使用。最近，计算机桌面出版软件”Aldus PageMaker”也通过同样的方式使Lorem Ipsum落入大众的视野\",\r\n      language: \"JS\",\r\n      date: \"20 июля 2020\"\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: \"Example 3\",\r\n      code: \"Example code 3\",\r\n      language: \"C++\",\r\n      date: \"22 июля 2020\"\r\n    },\r\n  ],\r\n  activeId: null\r\n}\r\n\r\nconst ScriptsSlice = createSlice({\r\n  name: \"scripts\",\r\n  initialState,\r\n  reducers: {\r\n    editScript: (state: IScripts, { payload }: PayloadAction<IChangePayload>): void => {\r\n      state.scripts = state.scripts.map((item: IScriptItem) => {\r\n        if (item.id === payload.id) {\r\n          item.name = payload.name\r\n          item.code = payload.code\r\n          item.language = payload.language\r\n          item.date = payload.date\r\n        }\r\n        return item\r\n      })\r\n    },\r\n    addScript: (state: IScripts, { payload }: PayloadAction<IAddPayload>): void => {},\r\n    changeActiveScriptId: (state: IScripts, { payload }: PayloadAction<TActiveId>): void => {\r\n      state.activeId = payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const { editScript, addScript, changeActiveScriptId } = ScriptsSlice.actions\r\nexport default ScriptsSlice.reducer\r\n","import React, { ChangeEvent, KeyboardEvent } from \"react\"\r\nimport { IScriptItem, TActiveId, IChangePayload } from '../../store/scripts/slice'\r\n\r\ninterface IState {\r\n  editId: TActiveId;\r\n  name: string;\r\n  code: string;\r\n  language: string;\r\n  date: string;\r\n}\r\n\r\ninterface IStateProps {\r\n  script: IScriptItem;\r\n  activeId: TActiveId;\r\n}\r\n\r\ninterface IFuncProps {\r\n  onSetActive: (activeId: TActiveId) => void\r\n  onChange: (payload: IChangePayload) => void\r\n}\r\n\r\nclass ScriptItem extends React.Component<IStateProps & IFuncProps, IState> {\r\n  constructor(props: IStateProps & IFuncProps) {\r\n    super(props)\r\n    const { script: { name, code, language, date } } = props\r\n    this.state = {\r\n      editId: \"\",\r\n      name: name,\r\n      code: code,\r\n      date: date,\r\n      language: language\r\n    }\r\n  }\r\n\r\n  private onSetChange = (): void => {\r\n    const { script: { id } } = this.props\r\n    this.handleSetActive(id)\r\n  }\r\n\r\n  private handleSetActive = (id: TActiveId): void => {\r\n    const { onSetActive } = this.props\r\n    this.setState({\r\n      editId: id\r\n    })\r\n    onSetActive(id)\r\n  }\r\n\r\n  private onChangeNameInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { value } = e.target\r\n    this.setState({name: value});\r\n  }\r\n\r\n  private onChangeCodeInput = (e: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const { value } = e.target\r\n    this.setState({code: value});\r\n  }\r\n\r\n  private onChangeLanguageInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { value } = e.target\r\n    this.setState({language: value});\r\n  }\r\n\r\n  private onChangeDateInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { value } = e.target\r\n    this.setState({date: value});\r\n  }\r\n\r\n  private handleKeyDown = (e: KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\r\n    const { onChange, script } = this.props\r\n    const { name, code, language, date } = this.state\r\n\r\n    if (e.keyCode === 13) {\r\n      this.handleSetActive(null)\r\n      onChange({id: script.id, name, code, language, date})\r\n    }\r\n\r\n    if (e.keyCode === 27) {\r\n      this.handleSetActive(null)\r\n      this.setState({\r\n        name: script.name,\r\n        code: script.code,\r\n        language: script.language,\r\n        date: script.date,\r\n      })\r\n    }\r\n  }\r\n\r\n  private renderFields = (): JSX.Element => {\r\n    const { script, activeId } = this.props\r\n    const { editId, name, code, language, date } = this.state\r\n    if (activeId && editId && activeId === editId) {\r\n      return (\r\n        <>\r\n          <div className=\"table-field__edit\">\r\n            <input value={name} onChange={this.onChangeNameInput} onKeyDown={this.handleKeyDown} autoFocus/>\r\n          </div>\r\n          <div className=\"table-field__edit\">\r\n            <textarea\r\n              value={code}\r\n              onChange={this.onChangeCodeInput}\r\n              onKeyDown={this.handleKeyDown}\r\n            />\r\n          </div>\r\n          <div className=\"table-field__edit\">\r\n            <input value={language} onChange={this.onChangeLanguageInput} onKeyDown={this.handleKeyDown}/>  \r\n          </div>\r\n          <div className=\"table-field__edit\">\r\n            <input value={date} onChange={this.onChangeDateInput} onKeyDown={this.handleKeyDown}/>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"table-field\">{ script.name }</div>\r\n        <div className=\"table-field\">{ script.code.length > 100 ? `${script.code.slice(0, 100)}...` : script.code }</div>\r\n        <div className=\"table-field\">{ script.language }</div>\r\n        <div className=\"table-field\">{ script.date }</div>\r\n      </>\r\n    )\r\n  }\r\n  \r\n  public render() {\r\n    const { editId } = this.state\r\n    const { activeId } = this.props\r\n    const scriptItemClassName = editId === activeId ? 'script-item' : 'script-item item-not-edit'\r\n    return (\r\n      <div className={scriptItemClassName} onDoubleClick={ this.onSetChange }>\r\n        { this.renderFields() }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ScriptItem","import React from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { IState } from '../../store'\r\nimport { IScriptItem, IAddPayload, IChangePayload, addScript, editScript, TActiveId, changeActiveScriptId } from '../../store/scripts/slice'\r\nimport ScriptItem from \"../../components/script-list/ScriptItem\"\r\n\r\ninterface IStateProps {\r\n  scripts: IScriptItem[];\r\n  activeId: TActiveId;\r\n}\r\n\r\ninterface IFunProps {\r\n  addScript: (payload: IAddPayload) => {};\r\n  editScript: (payload: IChangePayload) => {};\r\n  changeActiveScriptId: (payload: TActiveId) => {}\r\n}\r\n\r\nclass ScriptsTable extends React.Component<IStateProps & IFunProps> {\r\n\r\n  private renderHeader = (): JSX.Element => {\r\n    return (\r\n      <div className=\"scripts-table__header\">\r\n        <div className=\"table-field\">Название</div>\r\n        <div className=\"table-field\">Код</div>\r\n        <div className=\"table-field\">Язык программирования</div>\r\n        <div className=\"table-field\">Дата изменения</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  private renderItems = (): JSX.Element[] => {\r\n    const { scripts, activeId } = this.props\r\n    return scripts.map((item: IScriptItem) => (\r\n      <ScriptItem script={item} key={item.id} activeId={activeId} onSetActive={this.handleSetActiveId} onChange={this.handleChangeItem}/>\r\n    ))\r\n  }\r\n\r\n  private handleSetActiveId = (activeId: TActiveId): void => {\r\n    const { changeActiveScriptId } = this.props\r\n    changeActiveScriptId(activeId)\r\n  }\r\n\r\n  private handleChangeItem = (item: IChangePayload): void => {\r\n    const { editScript } = this.props\r\n    editScript(item)\r\n  }\r\n  \r\n\r\n  public render() {\r\n    const { scripts, activeId } = this.props\r\n    return (\r\n      <div className=\"scripts-table\">\r\n        { this.renderHeader() }\r\n        { this.renderItems() }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState): IStateProps => {\r\n  return {\r\n    scripts: state.scripts.scripts,\r\n    activeId: state.scripts.activeId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any): IFunProps => bindActionCreators({\r\n  addScript,\r\n  editScript,\r\n  changeActiveScriptId,\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScriptsTable)","import React from 'react';\nimport ScriptsTable from \"./containers/scripts-table/ScriptsTable\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ScriptsTable />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux'\r\nimport scripts, { IScripts } from \"./scripts/slice\"\r\n\r\nexport interface IState {\r\n  scripts: IScripts\r\n}\r\n\r\nexport default combineReducers({\r\n  scripts\r\n})","import * as React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { configureStore } from \"@reduxjs/toolkit\"\nimport { Provider } from \"react-redux\"\nimport rootReducer from './store'\n\nexport const store = configureStore({\n  reducer: rootReducer\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}